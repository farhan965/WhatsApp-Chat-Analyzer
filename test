with cte as summarized as 
(

SELECT c.*
      ,sprev.TotalKits AS PriorKits
      ,sprev.Amount AS PriorAmount
FROM combined_full c
LEFT JOIN (
    SELECT *,
           ROW_NUMBER() OVER (PARTITION BY Email ORDER BY first_inst desc) AS rn
    FROM combined_full
) sprev ON c.Email = sprev.Email AND sprev.rn = 1 and sprev.first_inst < c.first_inst
WHERE c.first_inst = 1 
   OR sprev.TotalKits <> c.TotalKits 
   OR sprev.Amount <> c.Amount



)

select * from summarized;




with cte as summarized as 
(

SELECT  c.*
	   ,sprev.TotalKits PriorKits
	   ,sprev.Amount PriorAmount
	  

FROM combined_full c

     OUTER APPLY (SELECT TOP 1 TotalKits, Amount
	               FROM combined_full sprev
	              WHERE sprev.Email = c.Email
				    AND sprev.first_inst < c.first_inst
			      ORDER BY sprev.first_inst	DESC	) sprev

WHERE  c.first_inst = 1 OR sprev.TotalKits <> c.TotalKits OR sprev.Amount <> c.Amount  --<--Grab first available instance OR when values have changed


)

select * from summarized;




WITH summarized AS (
    SELECT
        c.*,
        sprev.TotalKits AS PriorKits,
        sprev.Amount AS PriorAmount
    FROM
        combined_full c
    OUTER APPLY (
        SELECT
            TotalKits,
            Amount
        FROM (
            SELECT
                TotalKits,
                Amount,
                ROW_NUMBER() OVER (PARTITION BY Email ORDER BY first_inst DESC) AS rn
            FROM combined_full
            WHERE Email = c.Email AND first_inst < c.first_inst
        ) sprev
        WHERE sprev.rn = 1
    ) sprev
    WHERE
        c.first_inst = 1
        OR sprev.TotalKits <> c.TotalKits
        OR sprev.Amount <> c.Amount
)

SELECT * FROM summarized;




WITH summarized AS (
    SELECT c.*, 
           sprev.TotalKits AS PriorKits, 
           sprev.Amount AS PriorAmount
    FROM combined_full c
    LEFT JOIN (
        -- Subquery to get the previous row for each Email based on first_inst
        SELECT *,
               ROW_NUMBER() OVER (PARTITION BY Email ORDER BY first_inst DESC) AS rn
        FROM combined_full
    ) sprev ON c.Email = sprev.Email 
            AND sprev.rn = 1  -- Get the most recent previous row
            AND sprev.first_inst < c.first_inst  -- Only previous rows
    WHERE c.first_inst = 1 
       OR sprev.TotalKits <> c.TotalKits 
       OR sprev.Amount <> c.Amount  -- Compare values to detect changes
)

SELECT * 
FROM summarized;




WITH summarized AS (
    SELECT c.*, 
           sprev.TotalKits AS PriorKits, 
           sprev.Amount AS PriorAmount
    FROM combined_full c
    LEFT JOIN (
        -- Subquery to get the previous row for each Email based on first_inst
        SELECT *,
               ROW_NUMBER() OVER (PARTITION BY Email ORDER BY first_inst DESC) AS rn
        FROM combined_full
    ) sprev 
        ON c.Email = sprev.Email
        AND sprev.rn = 1  -- Get the most recent previous row
        AND sprev.first_inst < c.first_inst  -- Only previous rows
    WHERE c.first_inst = 1 
       OR sprev.TotalKits <> c.TotalKits 
       OR sprev.Amount <> c.Amount  -- Compare values to detect changes
)

SELECT * 
FROM summarized;



WITH summarized AS (
    SELECT c.*, 
           sprev.TotalKits AS PriorKits, 
           sprev.Amount AS PriorAmount
    FROM combined_full c
    LEFT JOIN (
        -- Subquery to get the previous row for each Email based on first_inst
        SELECT *,
               ROW_NUMBER() OVER (PARTITION BY Email ORDER BY first_inst DESC) AS rn
        FROM combined_full
    ) sprev
        ON c.Email = sprev.Email
        AND sprev.rn = 1  -- Get the most recent previous row
        AND sprev.first_inst < c.first_inst  -- Only previous rows
    WHERE c.first_inst = 1 
       OR sprev.TotalKits <> c.TotalKits 
       OR sprev.Amount <> c.Amount  -- Compare values to detect changes
)

SELECT * 
FROM summarized;



WITH summarized AS (
    SELECT c.*, 
           sprev.TotalKits AS PriorKits, 
           sprev.Amount AS PriorAmount
    FROM combined_full c
    LEFT JOIN (
        -- Subquery to get the previous row for each Email based on first_inst
        SELECT *,
               ROW_NUMBER() OVER (PARTITION BY Email ORDER BY first_inst DESC) AS rn
        FROM combined_full
    ) sprev
        ON c.Email = sprev.Email
        AND sprev.rn = 1  -- Get the most recent previous row
        AND sprev.first_inst < c.first_inst  -- Only previous rows
    WHERE c.first_inst = 1 
       OR sprev.TotalKits <> c.TotalKits 
       OR sprev.Amount <> c.Amount  -- Compare values to detect changes
)

SELECT * 
FROM summarized;
